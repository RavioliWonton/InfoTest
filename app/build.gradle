//import org.jetbrains.kotlin.compose.compiler.gradle.ComposeFeatureFlag

import org.jetbrains.kotlin.gradle.dsl.JvmDefaultMode
import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.dsl.KotlinVersion

plugins {
    alias libs.plugins.android.application
    alias libs.plugins.android.cache.fix
    alias libs.plugins.kotlin.android
    alias libs.plugins.kotlin.compose
    //alias libs.plugins.ksp
    alias libs.plugins.kotlin.serialization
    //alias libs.plugins.moshix
    alias libs.plugins.ben.manes.versions
    alias libs.plugins.dexcount
    //alias libs.plugins.android.retrofix
    alias libs.plugins.androidx.baselineprofile
    id 'app.cash.licensee' version '1.13.0'
    id 'kotlin-parcelize'
    id 'project-report'
}

android {
    compileSdk = 36

    defaultConfig {
        applicationId = 'com.example.infotest'
        minSdk = 21
        targetSdk = 36
        versionCode = 9
        versionName = '1.2.2'

        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        androidResources.localeFilters += [ 'zh' ]

        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters += [ 'armeabi-v7a', 'arm64-v8a' ]
        }
    }

    buildTypes {
        release {
            minifyEnabled = true
            shrinkResources = true
            proguardFiles += [ getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' ]
        }
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }

    compileOptions {
        incremental = true
        coreLibraryDesugaringEnabled = true
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    buildFeatures.compose = true

    packaging {
        resources.excludes += '/META-INF/{AL2.0,LGPL2.1}'
        resources.excludes += 'DebugProbesKt.bin'
        //resources.excludes += 'META-INF/versions/9/previous-compilation-data.bin'
    }

    composeCompiler {
        includeSourceInformation = false
        includeTraceMarkers = false
    }

    namespace = 'com.example.infotest'

    testCoverage {
        jacocoVersion = '0.8.13'
    }

    lint {
        abortOnError = false
        checkAllWarnings = true
        checkDependencies = true
        explainIssues = true
        showAll = true
        checkReleaseBuilds = false
    }
}

licensee {
    allow('Apache-2.0')
    allow('BSD-3-Clause')
    allow('EPL-1.0')
    allowDependency('com.github.instacart', 'truetime-android', '4.0.0.alpha') {
        because 'Apache-2.0, but stupid plugin does not recognize'
    }
    ignoreDependencies('com.google.android.gms') {
        transitive = true
        because "commercial SDK"
    }
    ignoreDependencies('com.hihonor.mcs') {
        transitive = true
        because "commercial SDK"
    }
    ignoreDependencies('com.huawei.hms') {
        transitive = true
        because "commercial SDK"
    }
}

dependencies {
    baselineProfile projects.baselineprofile
    coreLibraryDesugaring libs.desugar.libs.nio
    //retrofix libs.streamsupport.android.retrofuture
    //retrofix libs.streamsupport.android.retrostreams // For Consumer conflicts
    debugImplementation libs.leakcanary
    implementation libs.kotlin.stdlib.jdk8
    implementation libs.splitties.appctx
    implementation libs.androidx.core.ktx
    implementation libs.androidx.versionedparcelable
    //implementation libs.androidx.coordinatorlayout
    implementation libs.androidx.fragment.compose
    implementation libs.androidx.collection
    implementation libs.androidx.customview
    implementation libs.androidx.profileinstaller
    implementation libs.androidx.viewpager
    implementation libs.androidx.privacysandbox.adservices
    implementation libs.androidx.concurrent.futures.ktx
    implementation libs.androidx.compose.animation
    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.material3
    implementation libs.androidx.compose.runtime.tracing
    //implementation libs.androidx.compose.material3.window.size
    implementation libs.androidx.compose.ui.preview
    implementation libs.androidx.compose.foundation
    implementation libs.androidx.compose.foundation.layout
    implementation libs.accompanist.permissions
    implementation libs.androidx.exifinterface
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.activity.compose
    implementation libs.androidx.window
    implementation libs.androidx.loader
    implementation libs.androidx.annotation
    implementation libs.androidx.annotation.experimental
    implementation libs.okio
    //implementation libs.moshi
    implementation libs.mmkv
    implementation libs.relinker
    //implementation libs.proguard.retrace
    implementation libs.huawei.ads.identifier
    implementation libs.hihonor.ads.identifier
    // https://dev.mi.com/console/doc/detail?pId=1821
    // implementation files('libs/DeviceId.jar')
    //implementation libs.firebase.installations
    implementation libs.play.services.base
    implementation libs.play.services.tasks
    implementation libs.play.services.cronet
    implementation libs.play.services.ads.identifier
    implementation libs.play.services.location
    implementation libs.play.services.appset
    implementation libs.play.services.time
    // AMap, BaiduLBS and so many other services need apply for key
    // Tencent could use basic location service without key.
    implementation libs.tencentLocationSdk
    implementation libs.pointlocation6709
    //implementation libs.apache.commons.lang3
    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlinx.coroutines.play.services
    implementation libs.kotlinx.serialization.json.okio
    implementation libs.truetime.android
    //implementation libs.byteunits
    implementation libs.conscrypt.android
    testImplementation libs.junit
    implementation libs.androidx.tracing.ktx
    androidTestImplementation libs.androidx.test.junit
    androidTestImplementation libs.androidx.test.espresso.core
    androidTestImplementation libs.androidx.compose.ui.test.junit4
    debugImplementation libs.androidx.compose.ui.tooling
    debugImplementation libs.androidx.compose.ui.test.manifest
}

kotlin {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_21
        languageVersion = KotlinVersion.KOTLIN_2_3
        apiVersion = KotlinVersion.KOTLIN_2_3
        javaParameters = true
        progressiveMode = true
        jvmDefault = JvmDefaultMode.NO_COMPATIBILITY
        extraWarnings = true
        freeCompilerArgs.addAll(["-Xjspecify-annotations=strict", "-Xtype-enhancement-improvements-strict-mode"])
    }
}

tasks.named("dependencyUpdates").configure {
    checkConstraints = true
    checkBuildEnvironmentConstraints = true
}